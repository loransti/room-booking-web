<!DOCTYPE html>
<html lang="en">
<head>
  <meta charset="UTF-8">
  <meta name="viewport" content="width=device-width, initial-scale=1">
  <title>Booking Status Â· Room Manager</title>
  <link href="https://cdn.jsdelivr.net/npm/bootstrap@5.3.0/dist/css/bootstrap.min.css" rel="stylesheet">
  <link href="https://cdn.jsdelivr.net/npm/bootstrap-icons@1.11.0/font/bootstrap-icons.css" rel="stylesheet">
  <style>
    :root { --bg:#f6f7f9; --card:#fff; --border:#e6e8ec; --text:#0a0a0a; --muted:#667085; --accent:#007aff; --radius:14px; --shadow:0 6px 20px rgba(0,0,0,0.06); }
    body.dark { --bg:#0f1115; --card:#181a1f; --border:#2a2e35; --text:#e6e8ed; --muted:#9aa4b2; --accent:#7c9cff; }
    body { background: var(--bg); color: var(--text); font-family: -apple-system, BlinkMacSystemFont, 'Segoe UI', Roboto, 'Helvetica Neue', Arial, sans-serif; }
    .wrap { min-height: 100vh; display:grid; place-items:center; padding: 20px; }
    .card { background: var(--card); border:1px solid var(--border); border-radius: var(--radius); box-shadow: var(--shadow); max-width: 720px; width:100%; }
    .muted { color: var(--muted); }
  </style>
</head>
<body>
  <div class="wrap">
    <button class="btn btn-link position-absolute" style="top:12px; right:12px" id="themeToggle" title="Toggle dark mode"><i class="bi bi-moon"></i></button>
    <div class="card">
      <div class="card-body p-4 p-sm-5">
        <h3 class="mb-3">Booking Status</h3>
        <div id="statusBox" class="mb-3"></div>
        <div id="details" class="mb-3"></div>
        <div id="actions" class="d-flex gap-2"></div>
        <div class="mt-3"><a class="btn btn-outline-secondary" href="/status">Find another</a></div>
      </div>
    </div>
  </div>

  <script>
    (function(){
      const prefersDark = window.matchMedia && window.matchMedia('(prefers-color-scheme: dark)').matches;
      const saved = localStorage.getItem('rm-dark');
      const isDark = saved === 'true' || (saved === null && prefersDark);
      if (isDark) document.body.classList.add('dark');
      const btn = document.getElementById('themeToggle');
      if (btn) btn.addEventListener('click', function(){
        document.body.classList.toggle('dark');
        localStorage.setItem('rm-dark', document.body.classList.contains('dark'));
        this.querySelector('i').className = document.body.classList.contains('dark') ? 'bi bi-sun' : 'bi bi-moon';
      });
    })();
  </script>
  <script>
    const token = '<%= token %>';
    const statusBox = document.getElementById('statusBox');
    const details = document.getElementById('details');
    const actions = document.getElementById('actions');

    async function loadStatus(){
      const res = await fetch(`/api/status/${token}`);
      const data = await res.json();
      if (!data.ok) { statusBox.innerHTML = '<div class="alert alert-danger">Not found</div>'; return; }
      const r = data.request, b = data.booking;
      let statusText = r.status.toUpperCase();
      if (b && b.status) statusText = b.status.toUpperCase();
      statusBox.innerHTML = `<div class=\"alert alert-info mb-0\"><strong>Status:</strong> ${statusText}</div>`;
      const fmt = (d) => new Date(d).toLocaleString();
      const lines = [];
      lines.push(`<div><span class=\"muted\">Reservation:</span> <code>${r.reservation_code}</code></div>`);
      lines.push(`<div><span class=\"muted\">Room:</span> ${r.room}</div>`);
      lines.push(`<div><span class=\"muted\">From:</span> ${fmt(r.start)}</div>`);
      lines.push(`<div><span class=\"muted\">To:</span> ${fmt(r.end)}</div>`);
      if (b) {
        lines.push(`<div><span class=\"muted\">Booking ID:</span> <code>${b.id}</code></div>`);
        if (b.resident_name) {
          lines.push(`<div><span class=\"muted\">Resident:</span> ${b.resident_name}</div>`);
        }
        if (b.opener && b.opener.type) {
          lines.push(`<div><span class=\"muted\">Opener:</span> ${b.opener.type.toUpperCase()} ${b.opener_name? '('+b.opener_name+')':''}</div>`);
        }
      }
      details.innerHTML = lines.join('');

      actions.innerHTML = '';
      const btnCancel = document.createElement('button');
      btnCancel.className = 'btn btn-outline-danger';
      btnCancel.textContent = 'Cancel booking';
      btnCancel.onclick = async () => {
        if (!confirm('Cancel this booking/request?')) return;
        const r = await fetch(`/api/status/${token}/cancel`, { method: 'POST' });
        const j = await r.json();
        if (j.ok) loadStatus(); else alert('Failed to cancel');
      };
      actions.appendChild(btnCancel);
    }

    loadStatus();
    setInterval(loadStatus, 5000);
  </script>
</body>
</html>
