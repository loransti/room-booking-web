<% title = 'Bookings' %>
<div class="d-flex justify-content-between align-items-center mb-3">
  <h2 class="mb-0">Bookings</h2>
  <div>
    <a class="btn btn-outline-secondary btn-sm" href="/api/export">
      <i class="bi bi-download me-1"></i> Export CSV
    </a>
  </div>
</div>

<form class="row g-2 align-items-end mb-3">
  <div class="col-md-3">
    <label class="form-label">Status</label>
    <select name="status" class="form-select">
      <option value="" <%= !query.status ? 'selected' : '' %>>All</option>
      <option value="confirmed" <%= query.status === 'confirmed' ? 'selected' : '' %>>Confirmed</option>
      <option value="active" <%= query.status === 'active' ? 'selected' : '' %>>Active</option>
      <option value="completed" <%= query.status === 'completed' ? 'selected' : '' %>>Completed</option>
      <option value="overdue" <%= query.status === 'overdue' ? 'selected' : '' %>>Overdue</option>
      <option value="cancelled" <%= query.status === 'cancelled' ? 'selected' : '' %>>Cancelled</option>
    </select>
  </div>
  <div class="col-md-3">
    <label class="form-label">Date</label>
    <input type="date" name="date" class="form-control" value="<%= query.date || '' %>">
  </div>
  <div class="col-md-3">
    <button type="submit" class="btn btn-primary w-100">Filter</button>
  </div>
  <div class="col-md-3">
    <a href="/bookings" class="btn btn-outline-secondary w-100">Reset</a>
  </div>
</form>

<div class="card">
  <div class="table-responsive">
    <table class="table align-middle mb-0 stack-table">
      <thead>
        <tr>
          <th>ID</th>
          <th>User</th>
          <th>Start</th>
          <th>End</th>
          <th>Status</th>
          <th>Opener</th>
          <th>Actions</th>
        </tr>
      </thead>
      <tbody>
        <% if (bookings && bookings.length) { %>
          <% bookings.forEach(b => { %>
            <tr>
              <td class="text-nowrap" data-label="ID"><code><%= b.id %></code></td>
              <td data-label="User"><%= b.user ? b.user.name : 'Unknown' %></td>
              <td data-label="Start"><%= formatDateTime(b.start) %></td>
              <td data-label="End"><%= formatDateTime(b.end) %></td>
              <td data-label="Status">
                <span class="badge bg-<%= b.status === 'completed' ? 'success' : (b.status === 'active' ? 'primary' : (b.status === 'overdue' ? 'danger' : (b.status === 'cancelled' ? 'secondary' : 'warning'))) %>">
                  <%= b.status %>
                </span>
              </td>
              <td data-label="Opener"><%= b.opener && b.opener.type ? b.opener.type.toUpperCase() : '-' %></td>
              <td class="text-nowrap" data-label="Actions">
                <% const canCancel = ['confirmed','active'].includes(b.status); %>
                <% const canForceClose = b.status === 'active'; %>
                <button class="btn btn-sm btn-outline-danger me-1" onclick="cancelBooking('<%= b.id %>')" <%= canCancel ? '' : 'disabled' %>>Cancel</button>
                <button class="btn btn-sm btn-outline-warning" onclick="forceClose('<%= b.id %>')" <%= canForceClose ? '' : 'disabled' %>>Force Close</button>
              </td>
            </tr>
          <% }) %>
        <% } else { %>
          <tr><td colspan="7" class="text-center text-muted">No bookings found</td></tr>
        <% } %>
      </tbody>
    </table>
  </div>
  <div class="card-body">
    <nav>
      <ul class="pagination mb-0">
        <% for (let p = 1; p <= totalPages; p++) { %>
          <li class="page-item <%= p === currentPage ? 'active' : '' %>">
            <a class="page-link" href="/bookings?<%= new URLSearchParams(Object.assign({}, query, { page: p })).toString() %>"><%= p %></a>
          </li>
        <% } %>
      </ul>
    </nav>
  </div>
</div>

<script>
  async function cancelBooking(id) {
    if (!confirm('Cancel this booking?')) return;
    const res = await fetch(`/api/bookings/${id}/cancel`, { method: 'POST' });
    const data = await res.json();
    if (data.success) {
      location.reload();
    } else {
      alert(data.message || 'Failed to cancel');
    }
  }

  async function forceClose(id) {
    if (!confirm('Force close this booking?')) return;
    const res = await fetch(`/api/bookings/${id}/force-close`, { method: 'POST' });
    const data = await res.json();
    if (data.success) {
      location.reload();
    } else {
      alert(data.message || 'Failed to force close');
    }
  }
</script>
